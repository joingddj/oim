<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.oimchat.client</groupId>
	<artifactId>oim-work-starter</artifactId>
	<version>1.0.0</version>
	<packaging>jar</packaging>

	<name>${project.artifactId}</name>
	<url></url>

	<properties>
		<!-- 属性定义 -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<slf4j.version>1.7.21</slf4j.version>
		<log4j.version>2.13.2</log4j.version>
		<mainClass>com.oimchat.client.startup.AppStartup</mainClass>
		<javafx.version>11</javafx.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.codefx.libfx</groupId>
			<artifactId>LibFX</artifactId>
			<version>0.3.0</version>
		</dependency>
		<dependency>
			<groupId>com.onlyxiahui.app</groupId>
			<artifactId>only-app-fx</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>1.13.1</version>
		</dependency>
		<dependency>
			<groupId>com.onlyxiahui.common</groupId>
			<artifactId>only-common-utils</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>com.onlyxiahui.common</groupId>
			<artifactId>only-common-lib-util</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>com.onlyxiahui.common</groupId>
			<artifactId>only-common-action-description</artifactId>
			<version>1.0.3</version>
		</dependency>

		<dependency>
			<groupId>com.onlyxiahui.app</groupId>
			<artifactId>only-app-context</artifactId>
			<version>1.0.0</version>
		</dependency>

		<dependency>
			<groupId>com.onlyxiahui.framework</groupId>
			<artifactId>only-action-dispatcher</artifactId>
			<version>1.2.0</version>
		</dependency>

		<dependency>
			<groupId>com.onlyxiahui.wofa</groupId>
			<artifactId>wofa-client-work-core</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.2.70</version>
		</dependency>

		<!-- log start -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<!-- log配置：Log4j2 + Slf4j -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency> <!-- 桥接：告诉Slf4j使用Log4j2 -->
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency> <!-- 桥接：告诉commons logging使用Log4j2 -->
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-jcl</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>com.lmax</groupId>
			<artifactId>disruptor</artifactId>
			<version>3.4.2</version>
		</dependency>
		<!-- log end -->

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>23.0</version>
		</dependency>

		<!-- hibernate start -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>5.4.20.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-jcache</artifactId>
			<version>5.4.20.Final</version>
		</dependency>
		<dependency>
			<groupId>org.ehcache</groupId>
			<artifactId>ehcache</artifactId>
			<version>3.8.1</version>
		</dependency>
		<!-- hibernate end -->

		<dependency>
			<groupId>com.onlyxiahui.extend</groupId>
			<artifactId>only-query-hibernate</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>1.2.4</version>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.4.200</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>

			<!-- clean插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.1.0</version>
			</plugin>

			<!-- resources插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.1.0</version>
			</plugin>

			<!-- compiler插件, 设定JDK版本 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>UTF8</encoding>
					<showWarnings>true</showWarnings>
				</configuration>
			</plugin>

			<!-- 忽略junit测试 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.2</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>

			
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.2.1</version>
				<executions>
					<execution>
						<goals>
							<goal>java</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<mainClass>${mainClass}</mainClass>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.2.0</version>
				<configuration>
					<archive>
						<!-- 生成的jar中，不要包含pom.xml和pom.properties这两个文件 -->
						<addMavenDescriptor>false</addMavenDescriptor>
						<!-- Manifest specific configuration -->
						<manifest>
							<!-- 是否要把第三方jar放到manifest的classpath中 -->
							<addClasspath>true</addClasspath>
							<!-- 生成的manifest中classpath的前缀，因为要把第三方jar放到lib目录下，所以classpath的前缀是lib/ -->
							<classpathPrefix>lib/</classpathPrefix>
							<!-- 应用的main class -->
							<mainClass>${mainClass}</mainClass>
						</manifest>
					</archive>
					<!-- 过滤掉不希望包含在jar中的文件 -->
					<excludes>
						<exclude>${project.basedir}/xml/*</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<!-- <version>3.1.0</version> -->
				<configuration>
					<!-- 是否含id -->
					<appendAssemblyId>false</appendAssemblyId>
					<descriptors>
						<descriptor>src/main/assembly/package.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<repositories>
		<repository>
			<id>nexus</id>
			<url>http://maven.onlyxiahui.com/repository/maven-public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	<licenses>
		<license>
			<name>The Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>
	<developers>
		<developer>
			<name>XiaHui</name>
			<email>onlyxiahui@qq.com</email>
			<roles>
				<role>developer</role>
			</roles>
			<timezone>+8</timezone>
		</developer>
	</developers>
</project>