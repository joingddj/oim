server.port = 11002
spring.application.name = work-user

management.endpoints.web.exposure.include = *
management.endpoints.jolokia.enabled = true
management.endpoint.health.show-details= ALWAYS

only.action.dispatcher.response-handle-enable=true
only.action.dispatcher.error-code-prefix=2
only.action.dispatcher.error-code-separator=.


# 其他参数配置
hibernate.show_sql=true
hibernate.hbm2ddl.auto=update
#update none
hibernate.query.substitutions=true 1, false 0
hibernate.jdbc.fetch_size=50
hibernate.jdbc.batch_size=50
hibernate.allow_update_outside_transaction=true
hibernate.transaction.coordinator_class=jdbc
hibernate.cache.use_second_level_cache = true
hibernate.cache.region.factory_class = org.hibernate.cache.jcache.JCacheRegionFactory
hibernate.javax.cache.provider = org.ehcache.jsr107.EhcacheCachingProvider
hibernate.javax.cache.missing_cache_strategy=create
hibernate.javax.cache.uri=Jcache.xml
hibernate.cache.use_query_cache=true
hibernate.search.default.directory_provider=org.hibernate.search.store.impl.FSDirectoryProvider


spring.aware.log4j2.loggers= [{"name": "root","level": "info"},{"name": "com.oimchat","level": "debug"}]

eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.cloud.client.ip-address}:${server.port}
eureka.client.serviceUrl.defaultZone: http://192.168.200.200:10001/eureka/


hibernate.dialect=org.hibernate.dialect.MySQL5Dialect

# 数据源配置，两个节点，每个节点一主一从。
spring.shardingsphere.datasource.names = master0

## 主库
spring.shardingsphere.datasource.master0.type = com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.master0.driver-class-name = com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.master0.url = jdbc:mysql://192.168.200.200:3306/only_oim?serverTimezone=GMT%2B8&useUnicode=true&&useSSL=false&useCompression=true&zeroDateTimeBehavior=convertToNull&allowPublicKeyRetrieval=true
spring.shardingsphere.datasource.master0.username = root
spring.shardingsphere.datasource.master0.password = Root@123456
spring.shardingsphere.datasource.master0.web-stat-filter.enabled = false
spring.shardingsphere.datasource.master0.stat-view-servlet.enabled = false
spring.shardingsphere.datasource.master0.initial-size = 5
spring.shardingsphere.datasource.master0.max-active = 100
spring.shardingsphere.datasource.master0.min-idle = 5
spring.shardingsphere.datasource.master0.max-wait = 60000
spring.shardingsphere.datasource.master0.min-evictable-idle-time-millis = 300000
spring.shardingsphere.datasource.master0.validation-query = SELECT 1 FROM DUAL
spring.shardingsphere.datasource.master0.test-while-idle = true
spring.shardingsphere.datasource.master0.test-on-borrow = false
spring.shardingsphere.datasource.master0.test-on-return = false
spring.shardingsphere.datasource.master0.pool-prepared-statements = false

## 开发环境下开启方便调试
spring.shardingsphere.config.props.sql.show = true



# Redis
# Redis服务器地址
spring.redis.host=192.168.200.30
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=123456
# Redis数据库索引（默认为0）
spring.redis.database=0
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=5000


# RabbitMQ
rabbitmq.host = 192.168.200.30
rabbitmq.port = 5672
rabbitmq.virtual-host = oim
rabbitmq.username = admin
rabbitmq.password = 123456
rabbitmq.channel-cache-size =5